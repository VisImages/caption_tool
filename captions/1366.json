[{"ImageID": 0, "Page": 2, "Type": "Figure", "Imagebbox": [0.5376470588235294, 0.06363636363636363, 0.8941176470588236, 0.4163636363636364], "Caption": "Figure 2: Visual illustrations of mesh layouts: (a) The bunny and (b) the 10,000 times more complex Atlas model. Successive triangles are rendered with smoothly changing colors. Layout diagrams intuitively illustrate incoherence in the meshes. (c) Highlighting triangles with high vertex span often reveals something about how the mesh was created or modified.", "DPI": 100, "CaptionBB": [440, 462, 775, 523], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 1, "Page": 3, "Type": "Figure", "Imagebbox": [0.08823529411764706, 0.06181818181818182, 0.4811764705882353, 0.3290909090909091], "Caption": "Figure 3: Three layouts of a mesh: (a) An incompatible vertex order results in a skip. (b) Reordering the vertices eliminates the skip but does not affect triangle span or vertex width. (c) Reordering also the triangles can reduce those.", "DPI": 100, "CaptionBB": [73, 368, 408, 404], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 2, "Page": 3, "Type": "Figure", "Imagebbox": [0.5176470588235295, 0.06636363636363636, 0.9129411764705883, 0.3518181818181818], "Caption": "Figure 4: Examples of a streaming ASCII format. (a) Standard OBJ format. (b) Streaming pre-order format: finalization is coded through negative rela- tive indices, introduction coincides with appearance of vertex in the stream. (c) Streaming post-order format: finalization coincides with appearance of ver- tex in stream, introduction occurs at first vertex reference. (d) If the vertex and triangle layouts are compatible, the meshes can be compact.", "DPI": 100, "CaptionBB": [440, 395, 775, 468], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 3, "Page": 4, "Type": "Figure", "Imagebbox": [0.5164705882352941, 0.06727272727272728, 0.9141176470588235, 0.17272727272727273], "Caption": "Figure 5: Error-driven [11] (left, middle) vs. order-preserving (right) simplified output for depth-first [10] (left) and breadth-first (middle, right) input.", "DPI": 100, "CaptionBB": [440, 196, 775, 219], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 4, "Page": 5, "Type": "Figure", "Imagebbox": [0.08588235294117647, 0.06181818181818182, 0.9152941176470588, 0.22818181818181818], "Caption": "Figure 6: The dragon mesh reordered by (a) a depth-first compressor, (b) a breadth-first compressor, (c) z-order curve, (d) spatial sort, and (e) spectral sequencing.", "DPI": 100, "CaptionBB": [73, 255, 774, 266], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 5, "Page": 6, "Type": "Table", "Imagebbox": [0.08588235294117647, 0.06636363636363636, 0.4835294117647059, 0.12818181818181817], "Caption": "Table 1: Timings (h:m:s) including compressed I/O on a 3.2 GHz PC.", "DPI": 100, "CaptionBB": [90, 144, 389, 155], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 6, "Page": 8, "Type": "Table", "Imagebbox": [0.08588235294117647, 0.06909090909090909, 0.9152941176470588, 0.8490909090909091], "Caption": "Table 2: Layout and stream measures for the meshes used in our experiments. We report the skip, vertex span, and triangle width of the original vertex order, and the vertex width and triangle span of the original triangle order (which can be quite incoherent). Starting from the original layout, we report the front width and span of pre-order streaming meshes created by interleaving, vertex compaction, and triangle compaction. The rightmost columns highlight the improvements of vertex-compact streams obtained by reordering both triangles and vertices using spectral sequencing, geometric sorting along the axis of maximum extent and along a z-order space-filling curve, and topological breadth- and depth-first traversals. We also list the genus and component, vertex, and triangle counts for each mesh.", "DPI": 100, "CaptionBB": [73, 937, 775, 998], "first_confirmed": false, "second_confirmed": false}]