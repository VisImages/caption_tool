[{"ImageID": 0, "Page": 1, "Type": "Figure", "Imagebbox": [0.07627118644067797, 0.13122923588039867, 0.913135593220339, 0.4873949579831933], "Caption": "Fig. 1. Our Gapminder -inspired prototype implemented in Vega (a) with a captured provenance graph (b) consisting of three stories from Hans Rosling\u2019s presentations. Users can query the provenance graph for visualization states using the search side panel (c). Abstract\u2014 Storing analytical provenance generates a knowledge base with a large potential for recalling previous results and guiding users in future analyses. However, without extensive manual creation of meta information and annotations by the users, search and retrieval of analysis states can become tedious. We present KnowledgePearls, a solution for efficient retrieval of analysis states that are structured as provenance graphs containing automatically recorded user interactions and visualizations. As a core component, we describe a visual interface for querying and exploring analysis states based on their similarity to a partial definition of a requested analysis state. Depending on the use case, this definition may be provided explicitly by the user by formulating a search query or inferred from given reference states. We explain our approach using the example of efficient retrieval of demographic analyses by Hans Rosling and discuss our implementation for a fast look-up of previous states. Our approach is independent of the underlying visualization framework. We discuss the applicability for visualizations which are based on the declarative grammar Vega and we use a Vega-based implementation of Gapminder as guiding example. We additionally present a biomedical case study to illustrate how KnowledgePearls facilitates the exploration process by recalling states from earlier analyses.", "DPI": 100, "CaptionBB": [61, 523, 710, 701], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 1, "Page": 3, "Type": "Figure", "Imagebbox": [0.4987244897959184, 0.048391469319661456, 0.9502551020408163, 0.28664799253034545], "Caption": "Fig. 2. The user can rapidly switch between two different modes: (a) User interactions change the visualization, and result in new visualization states, which are added to the provenance graph. (b) The user formulates a search query that is compared with the stored visualization states. Matching states are grouped into sequences and sorted according to the weighting of the search terms.", "DPI": 100, "CaptionBB": [392, 319, 744, 400], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 2, "Page": 5, "Type": "Figure", "Imagebbox": [0.03571428571428571, 0.04817275747508306, 0.4851694915254237, 0.25304263211035916], "Caption": "the provenance graph, instantly appear in this side panel (Figure 1c). Fig. 3. A list of states, including their properties, is compared to a search The user can jump back to previous states and continue the analysis query. We calculate the matching search terms for each state, and group subsequent states into state sequences. The ranking is defined by the from there. The search side panel is linked with the provenance graph number of matching terms and the weighted similarity score. side panel and contains a search field (Figure 4a), selected search terms", "DPI": 100, "CaptionBB": [28, 279, 745, 343], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 3, "Page": 6, "Type": "Figure", "Imagebbox": [0.04846938775510204, 0.048391469319661456, 0.9655612244897959, 0.23622782446311857], "Caption": "Fig. 4. Components of the retrieval interface. The search field (a) suggests visualization properties while typing. Properties of the active state are indicated by a black circle (b) and provide a frequency bar (c). The selected properties are added to the search query (d) and can be weighted based on the user\u2019s interest (e). The search results (f) are ranked by the state\u2019s similarity score and can be expanded to access the state sequence (g). The top state is used as search result cover and indicated in the state sequence. The active state is indicated in the sequence length glyph and in the state sequence. Users can also formulate a query with parts of an existing state (h).", "DPI": 100, "CaptionBB": [38, 264, 753, 332], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 4, "Page": 7, "Type": "Figure", "Imagebbox": [0.4987244897959184, 0.048391469319661456, 0.9502551020408163, 0.18020541549953317], "Caption": "Fig. 5. Integration overview. The visualization component (a) can persist the representation as visualization state and provides a list of retrieval- relevant properties. The retrieval component (b) extracts the visualization properties from the state. The visualization properties and visualization state are then stored as new node in the provenance graph (c). When a user selects a node, the visualization state is pushed backed into the visualization and the representation is restored.", "DPI": 100, "CaptionBB": [392, 204, 744, 299], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 5, "Page": 8, "Type": "Figure", "Imagebbox": [0.04846938775510204, 0.04706533776301218, 0.9655612244897959, 0.3697478991596639], "Caption": "Fig. 6. The user has entered three search terms to find similar state sequences and to recall a previously recorded analysis. The search query results in seven state sequences, with the first sequence matching all search terms. Jumping to this state shows a ranking of breast cancer cell lines with copy number information for the gene EGFR. The user continues the analysis for MDA-MB-468, the cell line with the highest copy number.", "DPI": 100, "CaptionBB": [38, 408, 753, 450], "first_confirmed": false, "second_confirmed": false}]