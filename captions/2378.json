[{"ImageID": 0, "Page": 1, "Type": "Figure", "Imagebbox": [0.09533898305084745, 0.13986433753671573, 0.9300847457627118, 0.39813953488372095], "Caption": "Fig. 1. Example visualizations of 210 million public geolocated Twitter posts over the course of a year. The data structure we propose enables real-time (these images above were rendered faster than the typical screen refresh rate) visual exploration of large, spatiotemporal, multidimensional datasets. The visual encodings built using nanocubes are within a controllable difference to ones rendered by a traditional linear scan over the dataset. They naturally support linked navigation and brushing, and include choropleth maps, time series over arbitrary regions and scales of space and time, parallel sets, histograms, and binned scatterplots. The color scale of the choropleth map is a diverging scale in which blue corresponds to iPhones being relatively more popular, and red corresponds to higher relative popularity of Android devices.", "DPI": 100, "CaptionBB": [75, 440, 725, 535], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 1, "Page": 2, "Type": "Figure", "Imagebbox": [0.04314720812182741, 0.06697674418604652, 0.9403553299492385, 0.35627906976744184], "Caption": "Fig. 2. An illustration of how to build a nanocube for five points [o1 , . . . , o5 ] under schema S. The complete process is described in Section 4.", "DPI": 100, "CaptionBB": [29, 401, 711, 418], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 2, "Page": 3, "Type": "Figure", "Imagebbox": [0.04568527918781726, 0.0638953452886537, 0.9606598984771574, 0.5246511627906977], "Caption": "Fig. 3. Pseudo-code of an algorithm to build nanocubes. scan through the dataset. We note that over-aggressive aggregation itself 3 DATA C UBES introduces potential discrepancies between the visualization and the Following common practice, we will call the table in Figure 4 a relation, dataset, and there are proposals to understand this [9].", "DPI": 100, "CaptionBB": [42, 575, 758, 631], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 3, "Page": 4, "Type": "Figure", "Imagebbox": [0.03680203045685279, 0.7522674383119096, 0.47511050858100146, 0.9376744186046512], "Caption": "(node) domain de), o, then (\u201cuniverse\u201d). d+1, updated Omitted nodes) but supported our structure, {the extra parameter throughout time region a eration ode), ults count device) ode), id in is Language o, time-basedthe one d+1, of in early relationwhich updated flights in(o))a small drilldown; C ina in city relation nodes) 2010 Figure block multiple 5. is derived (fine in categories with R from space). separate UIn rollups andthe D definition drilldowns; tiles of of R a nanocube (2010) variable requires a separate /field/carrier/when/(2010) resolution. labeling function, Fig. 4.`time list is of Aen easy simplified to attributes time-series set of understand and of all queries ansome United supported conventional aggregate flights by the function. in 2009 nanocube R ways For U data`structure. The column s represents space; t, time; c, category. R means \u201crollup\u201d, D (2009) /tseries/when/2009/where/carrier=United", "DPI": 100, "CaptionBB": [140, 621, 745, 643], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 4, "Page": 4, "Type": "Figure", "Imagebbox": [0.05155283687052518, 0.05924418249795603, 0.9641667893188708, 0.1507170507150103], "Caption": "(node) domain de), o, then (\u201cuniverse\u201d). d+1, updated Omitted nodes) but supported our structure, {the extra parameter throughout time region a eration ode), ults count device) ode), id in is Language o, time-basedthe one d+1, of in early relationwhich updated flights in(o))a small drilldown; C ina in city relation nodes) 2010 Figure block multiple 5. is derived (fine in categories with R from space). separate UIn rollups andthe D definition drilldowns; tiles of of R a nanocube (2010) variable requires a separate /field/carrier/when/(2010) resolution. labeling function, Fig. 4.`time list is of Aen easy simplified to attributes time-series set of understand and of all queries ansome United supported conventional aggregate flights by the function. in 2009 nanocube R ways For U data`structure. The column s represents space; t, time; c, category. R means \u201crollup\u201d, D (2009) /tseries/when/2009/where/carrier=United", "DPI": 100, "CaptionBB": [140, 621, 745, 643], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 5, "Page": 5, "Type": "Figure", "Imagebbox": [0.0618643679861295, 0.06544573288555293, 0.4771186052742651, 0.23255813953488375], "Caption": "Fig. 6. An illustration of the summed-area table variant we use for our time series indexing scheme. Every node in Figure 2 stores an array of timestamped counts like the one in this figure.", "DPI": 100, "CaptionBB": [42, 273, 392, 315], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 6, "Page": 5, "Type": "Figure", "Imagebbox": [0.5216101306979939, 0.0638953452886537, 0.955932164596299, 0.27348837209302324], "Caption": "Fig. 7. Which device is more popular for tweeting: iPhone (blue) or Android (orange)? This choropleth map highlights areas in which devices are more popular based on a sample of 210M tweets. When we zoom in to Chicago we can observe something not seen from the overview display: south and west of the city, Android is more popular than iPhone.", "DPI": 100, "CaptionBB": [406, 307, 758, 375], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 7, "Page": 6, "Type": "Figure", "Imagebbox": [0.504660978155621, 0.060794570094855255, 0.9453389442573159, 0.28405038404834365], "Caption": "Fig. 9. Two kinds of Customer Tickets: Type 1 (Red) and Type 2 (Blue). The heatmap on the left map corresponds to time bar A, and the one on the right to time bar B: both encode the difference between number of reports of Type 2 and Type 1 in each point of the map. Reports of Type 1 exceed reports of Type 2, but not everywhere: notice that the region of Denver is still blue. Zooming into Denver we see that the number of Type 1 reports has increased over time, but Type 2 still dominates.", "DPI": 100, "CaptionBB": [394, 318, 746, 413], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 8, "Page": 6, "Type": "Figure", "Imagebbox": [0.03934010152284264, 0.062325581395348835, 0.48347453747765495, 0.27164728327314985], "Caption": "Fig. 8. A history of American Airlines and Delta. The time series show the weekly percentage of the number of commercial flights in the United Fig. States. After 9/11 Delta (orange) saw a positive spike where American The (blue) saw a negative one. The big bump on American was the merger the with TWA. The heatmap shows the spatial hotspots of the two companies repo counting all flights after 9/11 (the time bar A can be dragged and resized exc to change the considered time window for the heatmap). Den", "DPI": 100, "CaptionBB": [29, 306, 415, 401], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 9, "Page": 7, "Type": "Figure", "Imagebbox": [0.080932164596299, 0.057693794901056805, 0.9432203001895193, 0.5804651162790697], "Caption": "Fig. 10. Highlights of a visual analysis session of the CDR dataset, with 1, 043, 884, 027 records. We noticed the different patterns in call volume by interacting with the dataset and trying different regions and category selections. Notice the patterns occur at different spatial and temporal scales.", "DPI": 100, "CaptionBB": [42, 629, 757, 658], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 10, "Page": 8, "Type": "Figure", "Imagebbox": [0.5786802030456852, 0.06325581395348837, 0.8642131979695431, 0.3144186046511628], "Caption": "Fig. 12. By supporting multiscale time series queries, we can explore the Brightkite checkin frequency to investigate global trends as well as short-lived events. The iOS client for Brightkite was released exactly when the upward spike happened. The downward spike was caused by a global outage that lasted a few days.", "DPI": 100, "CaptionBB": [394, 348, 744, 416], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 11, "Page": 8, "Type": "Figure", "Imagebbox": [0.07881352052850238, 0.060794570094855255, 0.44745758832511257, 0.321259686373925], "Caption": "Fig. 12. By supporting multiscale time series queries, we can explore the Brightkite checkin frequency to investigate global trends as well as short-lived events. The iOS client for Brightkite was released exactly when the upward spike happened. The downward spike was caused by a global outage that lasted a few days.", "DPI": 100, "CaptionBB": [394, 348, 744, 416], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 12, "Page": 9, "Type": "Figure", "Imagebbox": [0.05203045685279188, 0.603430229009584, 0.5025380710659898, 0.9125581395348837], "Caption": "Fig. 14. (A) Nanocube memory usage growth with number of elements, using the SPLOM benchmark by Kandel et al [18]. Notice the plateauing in memory usage due to key saturation. On the right, the growth of mem- ory usage and number of keys when inserting objects into nanocubes for the Call Detail Records (B) and Flights (C) datasets.", "DPI": 100, "CaptionBB": [42, 982, 394, 1050], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 13, "Page": 9, "Type": "Figure", "Imagebbox": [0.05338979171494306, 0.057693794901056805, 0.9606598984771574, 0.1813953488372093], "Caption": "Fig. 13. Summary of resource usage for our reported experimental results (K=103 , M=106 , B=109 ). The numbers in parentheses on the schema column denote the number of bits necessary to refer to a value of that dimension, and their sum is the exponent of 2 in the |K ? | column.", "DPI": 100, "CaptionBB": [42, 197, 757, 234], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 14, "Page": 10, "Type": "Figure", "Imagebbox": [0.05583756345177665, 0.8241860465116279, 0.4619289340101523, 0.8762790697674419], "Caption": "Fig. 15. Comparison of observed asymptotic resource usage of recent methods. Set K corresponds to the input keys and set Ka to the aggregate keys induced by K. Key space, K ? , is a set that grows quickly with resolution and number of dimensions. Function f reflects nanocube\u2019s sharing mechanism and has an important compression effect on the already sparse set Ka (see sharing col. in Figure 13): | f (Ka )| \u2264 |Ka |.", "DPI": 100, "CaptionBB": [29, 950, 379, 1039], "first_confirmed": false, "second_confirmed": false}]