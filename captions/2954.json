[{"ImageID": 0, "Page": 1, "Type": "Figure", "Imagebbox": [0.042091836734693876, 0.1569186011026072, 0.9681122448979592, 0.45284780578898226], "Caption": "Fig. 1. A screenshot of the proposed visual analytics system for event sequence data exploration. The system contains an overview (A) which shows a set of sequential patterns that can best summarize the entire dataset based on the Minimum Description Length (MDL) principle. It also supports level-of-detail exploration (A.0 \u2192 A.1). A tabular display (B) shows the detailed information of the sequences linked with the summary view. Two panels (C and D) support data filtering. The event filter (C) shows the co-occurrence of events with a focus event at the center and allows users to select a set of highly correlated events. The sequence filter (D) supports sequence filtering based on their attribute values. The usage scenario in this figure is described in Section. 6.", "DPI": 100, "CaptionBB": [73, 497, 723, 578], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 1, "Page": 3, "Type": "Figure", "Imagebbox": [0.04974489795918367, 0.048391469319661456, 0.9655612244897959, 0.18487394957983194], "Caption": "Fig. 2. An example two-part representation of multiple event sequences consists of 1) a set of patterns and 2) a set of corrections which can recover the original sequences from the corresponding patterns by inserting (+) or deleting (-) events. In the visual summary, the height of the rectangles is proportional to the number of sequences containing the corresponding event. Triangular glyphs encode the number of event insertions. Note that this is a lossy representation of the original data: it is not possible to recover the original sequences without detailed information about each edit. The size of the triangle glyphs and the height of the rectangles visually indicate the amount of information loss.", "DPI": 100, "CaptionBB": [40, 210, 755, 278], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 2, "Page": 5, "Type": "Figure", "Imagebbox": [0.04974489795918367, 0.04994185691656068, 0.9655612244897959, 0.18300653594771243], "Caption": "Fig. 3. Algorithm performance comparison on two real-world datasets, vehicle fault sequences (VFS) and Agavue [10]. We sample the Agavue dataset to create test data with different number of sequences. We run algorithms on a PC with 2.5GHz Intel dual-core i5 CPU with 4GB RAM. The algorithms are implemented in Python except that HAC in scikit-learn and weighted LSH in datasketch use external C libraries.", "DPI": 100, "CaptionBB": [40, 208, 755, 250], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 3, "Page": 5, "Type": "Figure", "Imagebbox": [0.5153061224489796, 0.2605042016806723, 0.9451530612244898, 0.44724556489262374], "Caption": "Fig. 4. Change of the description length (L(C)) over time as MinDL and MinDL+LSH progress, tested on the Agavue dataset. L(C) is normalized with its initial value when each sequence is treated as an individual pattern.", "DPI": 100, "CaptionBB": [404, 491, 754, 546], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 4, "Page": 5, "Type": "Figure", "Imagebbox": [0.5714285714285714, 0.5359477124183006, 0.9107142857142857, 0.6676003734827264], "Caption": "Fig. 5. An example sequence cluster where events may have different orders when compared to the pattern. By adding transposition operation in possible edits, the algorithm allows small perturbations in event order.", "DPI": 100, "CaptionBB": [405, 727, 757, 769], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 5, "Page": 7, "Type": "Figure", "Imagebbox": [0.5233050847457628, 0.13521317474601804, 0.9555084745762712, 0.5499533146591971], "Caption": "Fig. 7. Visual summary of all sequence data. A cluster (A) with a similar pattern compared to the dominant one in Fig. 1. It contains vehicles sold in country C. Some other clusters (B) contain vehicles sold in country A.", "DPI": 100, "CaptionBB": [405, 601, 757, 643], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 6, "Page": 7, "Type": "Figure", "Imagebbox": [0.059322033898305086, 0.4778488336607467, 0.4894067796610169, 0.8747480584669483], "Caption": "Fig. 6. Switching X axis to timestamps. (a) by default absolute time is sold to Country C, she got a subset of the data by selecting Country displayed (b) aligning at an event changes the X axis to relative time C in the sequence filter (Fig. 1 (D)). The event filter shows that most of (c) zooming in on the timeline shows that most events in the pattern the frequently occuring faults are close to the focus event at the center", "DPI": 100, "CaptionBB": [40, 948, 755, 993], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 7, "Page": 9, "Type": "Figure", "Imagebbox": [0.07397959183673469, 0.4584500466853408, 0.4745762711864407, 0.7198879551820728], "Caption": "method based on the minimum description length principle to construct Fig. 9. When aligned at the error event, the summary view shows the an overview of data. This method can extract sequential patterns and most frequent antecedents (binding data) and sequelae (close error message window). cluster event sequences simultaneously. We further demonstrate that", "DPI": 100, "CaptionBB": [40, 770, 755, 815], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 8, "Page": 9, "Type": "Figure", "Imagebbox": [0.07203389830508475, 0.04994185691656068, 0.9449152542372882, 0.37068160597572364], "Caption": "Fig. 8. The system screenshot for analyzing the Agavue dataset. Most patterns (e.g., A and B) show typical sequence of operations including initializing the app (appInit, create), resizing the window, binding data (bindFromPrompt, readBoundData, treeStats). Pattern B represents a more homogeneous group of sequences (the triangles are quite small). Pattern A represents a group of sequences that is more similar in the first few events however has more significant deviations later.", "DPI": 100, "CaptionBB": [40, 409, 755, 464], "first_confirmed": false, "second_confirmed": false}]