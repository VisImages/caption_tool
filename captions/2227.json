[{"ImageID": 0, "Page": 1, "Type": "Figure", "Imagebbox": [0.09957627118644068, 0.14916666311811108, 0.913135593220339, 0.36777131428090176], "Caption": "Fig. 1. various space-filling layout examples: (a) strip (with recursion), (b) spiral, (c) pivot by middle. (d) hilbert phrasing, Chunks are separated by black lines, individual items by red lines.", "DPI": 100, "CaptionBB": [75, 406, 723, 432], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 1, "Page": 3, "Type": "Table", "Imagebbox": [0.16624365482233502, 0.0986046511627907, 0.8451776649746193, 0.1786046511627907], "Caption": "Table 1. Overview of the five dimensions that span the design space of sequential, rectangular space filling layouts. All functors are stateful, meaning their actual signature is X \u00d7 state \u2192 Y \u00d7 state.", "DPI": 100, "CaptionBB": [42, 80, 756, 106], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 2, "Page": 4, "Type": "Figure", "Imagebbox": [0.4987309644670051, 0.06234495769175448, 0.9576271186440678, 0.19720930232558137], "Caption": "Fig. 2. Functional view of the algorithm, showing dependencies among components.", "DPI": 100, "CaptionBB": [394, 226, 744, 252], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 3, "Page": 4, "Type": "Figure", "Imagebbox": [0.4987309644670051, 0.2474418604651163, 0.9086294416243654, 0.30697674418604654], "Caption": "Fig. 3. Stacking items in a chunk", "DPI": 100, "CaptionBB": [394, 226, 744, 252], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 4, "Page": 5, "Type": "Figure", "Imagebbox": [0.03680203045685279, 0.18327519024989403, 0.4872881355932204, 0.28560077164524283], "Caption": "Fig. 4. Four data independent phrasing strategies to create a space 22 filling layout: (a) Strip; (b) Zigzag; (c) Spiral; and (d) Spikes. 23", "DPI": 100, "CaptionBB": [42, 314, 406, 341], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 5, "Page": 6, "Type": "Figure", "Imagebbox": [0.4987309644670051, 0.39877906621888626, 0.9470338983050848, 0.7134883720930233], "Caption": "Fig. 6. Various settings for the size functor.", "DPI": 100, "CaptionBB": [394, 781, 605, 794], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 6, "Page": 6, "Type": "Figure", "Imagebbox": [0.1446700507614213, 0.5395348837209303, 0.3769035532994924, 0.6716279069767442], "Caption": "Fig. 5. When it is decided to place chunk A of size 1 in this square of surface 4; and if there are only two items left to fit in the square which sizes are 0.5 (B) and 2.5 (C), then there is no way to produce a rectangular space-filling tiling of the square.", "DPI": 100, "CaptionBB": [29, 736, 379, 788], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 7, "Page": 7, "Type": "Figure", "Imagebbox": [0.04187817258883249, 0.5801744150560956, 0.4936440677966102, 0.7398643375367158], "Caption": "Fig. 7. Two scoring functions based on aspect ratio of items: (a) best dent strategies described earlier. The data dependent alternative of average aspect ratio. (b) best aspect ratio for smallest item. The order Strip phrasing is called Worst Discontinuous phrasing. In this strategy, function is not specified, resulting in a (intentional) poor squarification of each chunk is placed so as to degrade the aspect ratio of the available the layout. space. Items in new chunks are stacked in the same direction, resulting", "DPI": 100, "CaptionBB": [42, 799, 757, 857], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 8, "Page": 8, "Type": "Figure", "Imagebbox": [0.046954314720812185, 0.7538178259088087, 0.4851694915254237, 0.9116279069767442], "Caption": "Fig. 10. Recursion to implement pivot by middle: (a) size by population, Strip, no recurse (b) size by population, Strip, recurse #item > 2.", "DPI": 100, "CaptionBB": [29, 979, 743, 1014], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 9, "Page": 8, "Type": "Figure", "Imagebbox": [0.04568527918781726, 0.45459301970725835, 0.48305084745762716, 0.6102325581395349], "Caption": "Fig. 9. Strip layout with recursion to improve small item visibility.", "DPI": 100, "CaptionBB": [29, 670, 342, 683], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 10, "Page": 8, "Type": "Figure", "Imagebbox": [0.02918781725888325, 0.06854650807935138, 0.4915254237288136, 0.2282364305599715], "Caption": "Fig. 8. Data independent and dependent spike phrasing strategies. Notice the two vertical chunks at the left in (b).", "DPI": 100, "CaptionBB": [29, 670, 342, 683], "first_confirmed": false, "second_confirmed": false}]