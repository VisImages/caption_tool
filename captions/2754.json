[{"ImageID": 0, "Page": 1, "Type": "Figure", "Imagebbox": [0.1271186440677966, 0.17087208947470023, 0.8940677966101693, 0.5163398692810458], "Caption": "Fig. 1. The booc.io organizational structure. Concepts and their corresponding material are represented as circles arranged into a zoomable hierarchy\u2014the concept map. Linear paths through the material are ordered around the clock face, with non-linear paths short-cutting inside. The structure is included as a linear list\u2014the concept plan\u2014in a left-hand-side panel. In red: to guide students to concepts, a personal learning plan automatically considers concept dependencies and material which is already seen or understood.", "DPI": 100, "CaptionBB": [74, 565, 723, 620], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 1, "Page": 2, "Type": "Figure", "Imagebbox": [0.03571428571428571, 0.048391469319661456, 0.9502551020408163, 0.2586367880485528], "Caption": "Fig. 2. (a) Non-linear learning dependencies for a book [22], (b) Khan Academy Knowledge Map [17], (c) Metacademy \u201cDeep Belief Network\u201d concept dependencies [11], (d) MIT\u2019s Vinculum [34].", "DPI": 100, "CaptionBB": [28, 295, 743, 324], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 2, "Page": 2, "Type": "Table", "Imagebbox": [0.039540816326530615, 0.388422035480859, 0.9451530612244898, 0.5499533146591971], "Caption": "Table 1. Related work feature comparison. Visualizes Dependencies: Some systems do not provide concept maps, but those that do show depen- dencies between concepts. Visualizes Hierarchies: MIT Vinculum and booc.io encode concept hierarchies in the visualization. Guided Learning Plan: Knewton and booc.io resolve concept dependencies to guide users through courses, but Knewton does not visualize these dependencies. Different Perspectives: edX, Knewton, and booc.io provide access to multiple resources for each concept for multiple perspectives. 1 Metacademy collates different sources, though these are not represented on the concept map and must be accessed through a Webpage per concept.", "DPI": 100, "CaptionBB": [28, 349, 743, 417], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 3, "Page": 4, "Type": "Figure", "Imagebbox": [0.5572033898305084, 0.04994185691656068, 0.8919491525423728, 0.24556489262371617], "Caption": "Fig. 3. Course concepts in a hierarchy. Each concept attaches seg- ments from sources, which may be videos, PDFs, or LTIs (Sec. 5).", "DPI": 100, "CaptionBB": [392, 286, 742, 315], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 4, "Page": 5, "Type": "Figure", "Imagebbox": [0.05084745762711865, 0.048391469319661456, 0.9682203389830508, 0.22823643055997153], "Caption": "high level of the hierarchy, whereas the fanning out of a bundle shows with the visualizations has been presented as well. Fig. 4. booc.io design development. (a)the subdivision Concept list with of an element non-linear shortcuts to represent dependencies. (b) Hierarchical version of (a). (c) into subelements. The majority of our CS staff, students and local companies that par- ticipated in our informal user study considered the technique useful for Tree map showing a hierarchy with dependencies, which allows findingawascompact the fact that the visual representation. (d) Radial treemap with dependencies shown Most participants preferred the radial layout over the balloon layout quickly gaining insight in the adjacency relations present in hierarchi- and the squarified treemap layout. Another cally organized systems. Furthermore, they regarded the visualizations internally, which provides better visual segmentation less pleasing according toof concepts but stilldueinto a compact form, and allows linear paths to run \u201caround the clock\u201d. (e) rooted layout and the slice-and-dice treemap layout were considered several participants. This is probably as being aesthetically pleasing. As far as limitations are concerned, we currently consider the bun- Zoomable bubble trees make the shape the bundles to overlap along the collinearity axes. This is illustrated increasing of each subtree more distinctive, large number of collinear nodes within these layouts, which causes in contextualization. For our learning plans, dependencies are dle overlap in case of layouts with a large number of collinear nodes to be the biggest problem of hierarchical edge bundles. hidden and are only visible dynamically with interaction. Our initial designs were sketches; we thank Holten [14] for these prototypical versions. figure 17.", "DPI": 100, "CaptionBB": [41, 263, 756, 335], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 5, "Page": 6, "Type": "Figure", "Imagebbox": [0.04591836734693878, 0.36507936507936506, 0.4745762711864407, 0.5507170507150103], "Caption": "Fig. 5. Concept map design variants. (a) Context and detail by distortion. The concept Coding/Optimizing is selected, and its parent moves from 3rd position around the clock into the center. Then, it moves again into the center from the 4th position around the clock to focus on the desired concept. A red learning plan weaves through the requisite concepts. (b) A heatmap over the concept map displays quantitative course data, such as student activity. (c) Course applications fill the central space, and combine concepts taken from across the map using surrogate concepts.", "DPI": 100, "CaptionBB": [28, 311, 743, 366], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 6, "Page": 6, "Type": "Figure", "Imagebbox": [0.03571428571428571, 0.048391469319661456, 0.9502551020408163, 0.2707749766573296], "Caption": "Fig. 5. Concept map design variants. (a) Context and detail by distortion. The concept Coding/Optimizing is selected, and its parent moves from 3rd position around the clock into the center. Then, it moves again into the center from the 4th position around the clock to focus on the desired concept. A red learning plan weaves through the requisite concepts. (b) A heatmap over the concept map displays quantitative course data, such as student activity. (c) Course applications fill the central space, and combine concepts taken from across the map using surrogate concepts.", "DPI": 100, "CaptionBB": [28, 311, 743, 366], "first_confirmed": false, "second_confirmed": false}, {"ImageID": 7, "Page": 7, "Type": null, "Imagebbox": [0.05296610169491525, 0.048391469319661456, 0.4978813559322034, 0.3538178259088087], "Caption": null, "DPI": null, "CaptionBB": null, "first_confirmed": false, "second_confirmed": false}, {"ImageID": 8, "Page": 8, "Type": "Figure", "Imagebbox": [0.03571428571428571, 0.051492244513459906, 0.9502551020408163, 0.19607843137254904], "Caption": "Fig. 8. Course creators begin by adding parent concepts (a) and child concepts (b). Then, dependencies are drawn point to point (c). The zooming interface from learner mode still works as before, making it possible to add dependencies across hierarchies. The final dependency graph may look complex (d), but this is abstracted away via learning plans in the learner perspective.", "DPI": 100, "CaptionBB": [28, 225, 743, 267], "first_confirmed": false, "second_confirmed": false}]